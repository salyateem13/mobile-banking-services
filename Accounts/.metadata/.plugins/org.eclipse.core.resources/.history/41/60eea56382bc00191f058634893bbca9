package com.syslog_client.test;

import org.apache.commons.logging.Log;
import org.apache.commons.logging.LogFactory;
import org.springframework.beans.factory.annotation.Qualifier;
import org.springframework.boot.SpringApplication;
import org.springframework.boot.autoconfigure.SpringBootApplication;

import org.springframework.messaging.MessageChannel;
import org.springframework.messaging.MessageHandler;

@SpringBootApplication
public class TestApplication {

	private static final Log LOGGER = LogFactory.getLog(TestApplication.class);

	public static void main(String[] args) {
		SpringApplication.run(TestApplication.class, args);
	}
	
	@Bean
	public MessageChannel pubsubInputChannel() {
	    return new PublishSubscribeChannel();
	}

	@Bean
	@Primary
	public PubSubInboundChannelAdapter messageChannelAdapter(
	    @Qualifier("pubsubInputChannel") MessageChannel inputChannel,
	    SubscriberFactory subscriberFactory) {
	    PubSubInboundChannelAdapter adapter =
	        new PubSubInboundChannelAdapter( subscriberFactory, "els-test-subscription");
	    adapter.setOutputChannel(inputChannel);
	    adapter.setAckMode(AckMode.MANUAL);

	    return adapter;
	}
	
	@Bean
	@ServiceActivator(inputChannel = "pubsubInputChannel")
	public MessageHandler messageReceiver() {
	    return message -> {
	        LOGGER.info("Message arrived! Payload: " + new String((byte[]) message.getPayload()));
	        BasicAcknowledgeablePubsubMessage originalMessage =
	              message.getHeaders().get(GcpPubSubHeaders.ORIGINAL_MESSAGE, BasicAcknowledgeablePubsubMessage.class);
	        originalMessage.ack();
	    };
	}
	
	

}
